#BlueJ class context
comment0.params=
comment0.target=FileHighscore()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ FileHighscore\r\n
comment1.params=
comment1.target=boolean\ isAvailable()
comment1.text=\r\n\ Returns\ true\ if\ the\ FileHighscore\ storage\ is\ available\ in\ this\ environment.\r\n
comment10.params=highscore
comment10.target=java.lang.String\ toHighscoreFileString(Highscore)
comment10.text=\r\n\ Returns\ a\ String\ representation\ of\ the\ highscore.\ This\ String\ can\ be\ used\ to\ \r\n\ save\ into\ a\ text\ file.\r\n
comment2.params=
comment2.target=void\ initHighscores()
comment2.text=\ \r\n\ Initially\ loads\ the\ highscore\ from\ the\ file.\r\n
comment3.params=
comment3.target=boolean\ isReadOnly()
comment3.text=\r\n\ Returns\ it\ the\ manager\ is\ read\ only.\r\n
comment4.params=
comment4.target=java.lang.String\ getCurrentPlayerName()
comment4.text=\r\n\ Returns\ the\ name\ of\ the\ current\ player.\r\n
comment5.params=currentPlayerName
comment5.target=void\ setCurrentPlayerName(java.lang.String)
comment5.text=\r\n\ Set\ the\ name\ of\ the\ player.\r\n
comment6.params=levelNumber
comment6.target=Highscore\ getHighscoreForLevel(int)
comment6.text=\r\n\ Returns\ the\ Highscore\ for\ the\ specified\ level.\ The\ returned\r\n\ Highscore\ is\ a\ clone.\ To\ store\ a\ change\ in\ the\ highscore,\ the\ method\r\n\ setHighscore(...)\ must\ be\ called.\r\n
comment7.params=highscore
comment7.target=void\ setHighscore(Highscore)
comment7.text=\r\n\ Sets\ the\ specified\ Highscore\ and\ stores\ it\ to\ the\ file.\r\n
comment8.params=
comment8.target=java.util.Map\ parseHighscoresFromFile()
comment8.text=\r\n\ Parses\ all\ the\ Highscores\ from\ the\ specified\ Level\ File.\r\n\ \r\n\ @return\ the\ highscores\ as\ a\ HashMap\ with\ the\ level\ number\ as\ a\ key.\r\n
comment9.params=highscores
comment9.target=void\ writeHighscoresToFile(java.util.Map)
comment9.text=\r\n\ Writes\ the\ highscores\ to\ the\ specified\ file.\r\n
numComments=11
